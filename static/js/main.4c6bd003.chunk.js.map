{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","Object","keys","map","option","i","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","increment","label","setState","prev","countFeedback","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAWeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCQQC,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAU,oBAAf,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAACC,EAAQC,GAAT,OACxB,wBAAgBC,KAAK,SAASC,QAAS,kBAAMR,EAAgBK,IAA7D,SACGA,GADUC,SCANG,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,8BAAMA,KCgBAC,EAhBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAc,IAAVD,EACK,cAAC,EAAD,CAAcL,QAAQ,sBAG3B,sBAAKT,UAAU,qBAAf,UACE,uCAAUW,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WC6COC,E,4MAnDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,UAAY,SAAAC,GACV,EAAKC,UACH,SAAAC,GAAI,sBACDF,EAAQE,EAAKF,GAAS,KAEzB,EAAKG,gB,EAITC,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBN,KADiB,EACXC,QADW,EACFC,K,EAIzBW,gCAAkC,WAAO,IAAD,EACP,EAAKP,MAA5BN,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,QAASC,EADe,EACfA,IACvB,OAAOY,KAAKC,MAAc,IAAPf,GAAeA,EAAOC,EAAUC,K,uDAG3C,IAAD,EACwBc,KAAKV,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,sBAAKb,UAAU,WAAf,UACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS6B,KAAKV,MACdlB,gBAAiB4B,KAAKT,cAI1B,cAAC,EAAD,CAASvB,MAAM,YAAf,SACE,cAAC,EAAD,CACEgB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKJ,qBACZR,mBAAoBY,KAAKH,6C,GA5CnBI,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4c6bd003.chunk.js","sourcesContent":["import React from 'react';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h3>{title}</h3>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import React from 'react';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className=\"feedback-controls\">\n      {Object.keys(options).map((option, i) => (\n        <button key={i} type=\"button\" onClick={() => onLeaveFeedback(option)}>\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default Notification;\n","import React from 'react';\nimport Notification from './Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  if (total === 0) {\n    return <Notification message=\"No feedback given\" />;\n  } else {\n    return (\n      <div className=\"feedback-statistic\">\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {total}</p>\n        <p>Positive feedback: {positivePercentage}%</p>\n      </div>\n    );\n  }\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\n\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  increment = label => {\n    this.setState(\n      prev => ({\n        [label]: prev[label] + 1,\n      }),\n      this.countFeedback,\n    );\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    return Math.round((good * 100) / (good + neutral + bad));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div className=\"feedback\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.increment}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"Statistic\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          ></Statistics>\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}